name: Deploy

on:
  push:
    branches:
      - feat/docker

jobs:
  build:                    
    runs-on: ubuntu-latest    # 우분투 최신버전으로 진행 할게요
    env :
      working-directory: ./
      APPLICATION: ${{ secrets.APPLICATION }}
      
    steps:                    # 순서대로 실행하겠습니다
    
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
             ~/.gradle/caches
             ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
              ${{ runner.os }}-gradle-
              
    - uses: actions/checkout@v2
    - run: |
          mkdir ./src/main/resources
          cd ./src/main/resources
          touch ./application.yml 
          echo "${{env.APPLICATION}}" > ./application.yml
          
    - uses: actions/upload-artifact@v2
      with:
        name: application.yml
        path: ./src/main/resources/application.yml
          
          
    - name: gradlew 실행권한 주기
      run: chmod +x gradlew


    - name: 스프링부트 애플리케이션 빌드 
      run: ./gradlew clean build 

    - name: Login to DockerHub 
      uses: docker/login-action@v1
      with:
          username: ${{ secrets.DOCKER_USERNAME }} # DockerHub 사용자 이름
          password: ${{ secrets.DOCKER_TOKEN }} # DockerHub 비밀번호

    - name: Build and Push Blue 
      if: startsWith(github.ref, 'refs/tags/blue') # 조건: 브랜치/태그 이름이 'blue'로 시작하는 경우
      env:
          DOCKER_COMPOSE_VERSION: 1.29.2 
          DOCKER_IMAGE_TAG: blue # Docker 이미지 태그
      run: |
          docker-compose build myapp-blue # myapp-blue 서비스를 위한 Docker 이미지 빌드
          docker-compose push myapp-blue # Docker 이미지를 DockerHub에 푸시

    - name: Build and Push Green # 단계의 이름
      if: startsWith(github.ref, 'refs/tags/green') # 조건: 브랜치/태그 이름이 'green'으로 시작하는 경우
      env:
          DOCKER_COMPOSE_VERSION: 1.29.2 # Docker Compose 버전
          DOCKER_IMAGE_TAG: green # Docker 이미지 태그
      run: |
          docker-compose build myapp-green # myapp-green 서비스를 위한 Docker 이미지 빌드
          docker-compose push myapp-green # Docker 이미지를 DockerHub에 푸시

    - name: Deploy Blue
      if: startsWith(github.ref, 'refs/tags/blue')
      uses: appleboy/ssh-action@master
      with:
          host: ${{ secrets.EC2_SERVER_HOST }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          port: 8091
          script: |
            cd ~/myapp
            docker-compose pull myapp-blue
            docker-compose up -d --remove-orphans myapp-blue
            sleep
    - name: Deploy Green
      if: startsWith(github.ref, 'refs/tags/green')
      uses: appleboy/ssh-action@master
      with:
          host: ${{ secrets.EC2_SERVER_HOST }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          port: 8092
          script: |
            cd ~/myapp
            docker-compose pull myapp-green
            docker-compose up -d --remove-orphans myapp-green
            sleep 30
            docker-compose down --remove-orphans
            docker-compose up -d --remove-orphans nginx
