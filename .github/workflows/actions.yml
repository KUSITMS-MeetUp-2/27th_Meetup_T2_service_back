name: Deploy

on:
  push:
    branches:
      - feat/docker

jobs:
  build:                    
    runs-on: ubuntu-latest    # 우분투 최신버전으로 진행 할게요
    env :
      working-directory: ./
      APPLICATION: ${{ secrets.APPLICATION }}
      
    steps:                    # 순서대로 실행하겠습니다
    
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
             ~/.gradle/caches
             ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
              ${{ runner.os }}-gradle-
              
    - uses: actions/checkout@v2
    - run: |
          mkdir ./src/main/resources
          cd ./src/main/resources
          touch ./application.yml 
          echo "${{env.APPLICATION}}" > ./application.yml
          
    - uses: actions/upload-artifact@v2
      with:
        name: application.yml
        path: ./src/main/resources/application.yml
          
          
    - name: gradlew 실행권한 주기
      run: chmod +x gradlew


    - name: 스프링부트 애플리케이션 빌드 
      run: ./gradlew clean build 

#     - name: Login to DockerHub
#       run:
#         docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

    - name: build image & run container
      uses: appleboy/ssh-action@v0.1.7
      with:
          host: ${{ secrets.EC2_SERVER_HOST }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          push: true
          tags: |
            meetup-blue:latest
            meetup-green:latest
    - name: Deploy to target server
      uses: appleboy/ssh-action@v0.1.3
      with:
            host: ${{ secrets.EC2_SERVER_HOST }}
            username: ec2-user
            key: ${{ secrets.PRIVATE_KEY }}
            script: |
              docker-compose up -d --no-deps --build blue
              sleep 30
              docker-compose up -d --no-deps --build green
            working-directory: /home/ec2-user/blue
