name: Deploy

on:
  push:
    branches:
      - feat/docker

jobs:
  build:                    
    runs-on: ubuntu-latest    # 우분투 최신버전으로 진행 할게요
    env :
      working-directory: ./
      APPLICATION: ${{ secrets.APPLICATION }}
      
    steps:                    # 순서대로 실행하겠습니다
    
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
             ~/.gradle/caches
             ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
              ${{ runner.os }}-gradle-
              
    - uses: actions/checkout@v2
    - run: |
          mkdir ./src/main/resources
          cd ./src/main/resources
          touch ./application.yml 
          echo "${{env.APPLICATION}}" > ./application.yml
          
    - uses: actions/upload-artifact@v2
      with:
        name: application.yml
        path: ./src/main/resources/application.yml
          
          
    - name: gradlew 실행권한 주기
      run: chmod +x gradlew


    - name: 스프링부트 애플리케이션 빌드 
      run: ./gradlew clean build 


#     - name: Docker build
#       run: |
#           docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#           docker build -t ${{ secrets.PROJECT_NAME }} .
#          docker tag ${{ secrets.PROJECT_NAME }} ${{ secrets.DOCKER_HUB_REPO }}:${GITHUB_SHA::7}-blue
#          docker tag ${{ secrets.PROJECT_NAME }} ${{ secrets.DOCKER_HUB_REPO }}:${GITHUB_SHA::7}-green

#          docker push ${{ secrets.DOCKER_HUB_REPO }}:${GITHUB_SHA::7}-blue
#          docker push ${{ secrets.DOCKER_HUB_REPO }}:${GITHUB_SHA::7}-green


  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build and Push Docker Images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: |
            ${{ secrets.PROJECT_NAME }} ${{ secrets.DOCKER_HUB_REPO }}:${GITHUB_SHA::7}-blue
            ${{ secrets.PROJECT_NAME }} ${{ secrets.DOCKER_HUB_REPO }}:${GITHUB_SHA::7}-green
    
      - name: Deploy Blue
        if: startsWith(github.ref, 'refs/tags/blue')
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_SERVER_HOST }}
          username: ec2-user
          password: ${{ secrets.PASSWORD }}
          port: 8091
          script: |
            cd ~/${{ secrets.PROJECT_NAME }} ${{ secrets.DOCKER_HUB_REPO }}
            docker-compose pull ${{ secrets.PROJECT_NAME }} ${{ secrets.DOCKER_HUB_REPO }}-blue
            docker-compose up -d --remove-orphans ${{ secrets.PROJECT_NAME }} ${{ secrets.DOCKER_HUB_REPO }}-blue
            sleep
      - name: Deploy Green
        if: startsWith(github.ref, 'refs/tags/green')
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_SERVER_HOST }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          port: 8092
          script: |
            cd ~/${{ secrets.PROJECT_NAME }} ${{ secrets.DOCKER_HUB_REPO }}
            docker-compose pull ${{ secrets.PROJECT_NAME }} ${{ secrets.DOCKER_HUB_REPO }}-green
            docker-compose up -d --remove-orphans ${{ secrets.PROJECT_NAME }} ${{ secrets.DOCKER_HUB_REPO }}-green
            sleep 30
            docker-compose down --remove-orphans
            docker-compose up -d --remove-orphans nginx
